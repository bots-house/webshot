version: "3.9"

networks:
  traefik_default:
    external: true

services:
  server:
    image: ghcr.io/bots-house/webshot:dev

    networks: [traefik_default, default]

    logging:
      driver: loki
      options:
        loki-url: "http://127.0.0.1:3100/loki/api/v1/push"

    environment:
      HTTP_ADDR: 0.0.0.0:8000

      STORAGE_S3_KEY: ${STORAGE_S3_KEY}
      STORAGE_S3_SECRET: ${STORAGE_S3_SECRET}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_BUCKET: ${STORAGE_S3_BUCKET}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      STORAGE_S3_SUBDIR: ${STORAGE_S3_SUBDIR}
      BROWSER_ADDR: http://chrome:3000
      LOG_DEBUG: 'true'

    deploy:
      replicas: 1
    
      update_config:
        order: start-first
        parallelism: 1
        delay: 10s

      restart_policy:
        condition: on-failure

      placement:
        constraints:
          - node.role == worker
          - node.labels.env == production-mix

      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_default
        - traefik.http.routers.webshot-http.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.webshot-http.entrypoints=http
        - traefik.http.routers.webshot-http.middlewares=https-redirect
        - traefik.http.routers.webshot-https.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.webshot-https.entrypoints=https
        - traefik.http.routers.webshot-https.tls=true
        - traefik.http.routers.webshot-https.tls.certresolver=le-cf
        - traefik.http.services.webshot.loadbalancer.server.port=8000
        - traefik.http.services.webshot.loadbalancer.healthcheck.path=/health
        - traefik.http.services.webshot.loadbalancer.healthcheck.interval=1s
        - traefik.http.services.webshot.loadbalancer.healthcheck.timeout=10s
        
  chrome:
    image: browserless/chrome
    networks: [default]
    environment: 
      MAX_CONCURRENT_SESSIONS: 10

    deploy:
      replicas: 1
    
      update_config:
        order: start-first
        parallelism: 1
        delay: 10s

      restart_policy:
        condition: on-failure

      placement:
        constraints:
          - node.role == worker
          - node.labels.env == staging-mix
      
      resources:
        limits:
          memory: 500M