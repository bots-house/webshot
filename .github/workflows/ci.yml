name: CI

on:
  push:

jobs:
  lint-docker:
    name: Lint Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  lint-go:
    name: Lint Go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.40.1

  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [lint-docker, lint-go]
    if: github.ref == 'refs/heads/main'
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Calculate build args
        id: build_info
        run: |
          echo ::set-output name=ref::$(git rev-parse --short "$GITHUB_SHA")
          echo ::set-output name=version::${GITHUB_REF##*/}
          echo ::set-output name=time::$(date --utc +%FT%TZ)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Cache Docker layers
        uses: actions/cache@v3.0.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        id: build_and_push
        uses: docker/build-push-action@v2.5.0
        with:
          build-args: |
            BUILD_VERSION=${{ steps.build_info.outputs.version }}
            BUILD_REF=${{ steps.build_info.outputs.ref }}
            BUILD_TIME=${{ steps.build_info.outputs.time }}

          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/webshot:dev
            botshouse/webshot:dev

          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.build_and_push.outputs.digest }}

  deploy-stage:
    name: Deploy Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://webshot.bots.house
      
    needs: [build-image]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy Stack
        uses: bots-house/portainer-deploy-stack-action@main
        with:
          portainer-url: ${{ secrets.CLUSTER_PORTAINER_URL }}

          portainer-username: ${{ secrets.CLUSTER_PORTAINER_USERNAME }}
          portainer-password: ${{ secrets.CLUSTER_PORTAINER_PASSWORD }}

          portainer-endpoint: 1

          stack-name: webshot-stage

          stack-file: .github/stack/stage.yml

          stack-vars: |
            DOMAIN: webshot.bots.house
            STORAGE_S3_KEY: ${{ secrets.STORAGE_S3_KEY }}
            STORAGE_S3_SECRET: ${{ secrets.STORAGE_S3_SECRET }}
            STORAGE_S3_REGION: ${{ secrets.STORAGE_S3_REGION }}
            STORAGE_S3_BUCKET: ${{ secrets.STORAGE_S3_BUCKET }}
            STORAGE_S3_ENDPOINT: ${{ secrets.STORAGE_S3_ENDPOINT }}
            STORAGE_S3_SUBDIR: ${{ secrets.STORAGE_S3_SUBDIR }}
            SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
            SENTRY_TRACES_SAMPLE_RATE: '0.5'

          teams: Microservices
